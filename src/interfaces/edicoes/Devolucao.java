/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.edicoes;

import banco.DAOaluguel;
import banco.DAOfilial;
import banco.DAOreceitasDespesas;
import banco.DAOveiculo;
import base.Aluguel;
import base.Main;
import base.ReceitaDespesa;
import base.Vendedor;
import interfaces.HomeVendedor;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Jorge
 */
public class Devolucao extends javax.swing.JPanel {

    /**
     * Creates new form Devolucao
     */
    private DAOaluguel dao;
    private String[] alugueis;
    private Aluguel aluguel;
    private Vendedor vendedor;
    
    public Devolucao(Vendedor vendedor) {
        loadAlugueis();
        initComponents();
        this.vendedor = vendedor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbNumOrdem = new javax.swing.JComboBox<>(this.alugueis);
        bttConfirmar = new javax.swing.JButton();
        bttLimpar = new javax.swing.JButton();
        bttVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaResultado = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel1.setText("Fazer Devolução");

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel2.setText("Numero da Ordem:");

        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel5.setText("Valor a pagar:");

        jLabel6.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel6.setText("R$");

        jcbNumOrdem.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jcbNumOrdem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbNumOrdem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbNumOrdemFocusLost(evt);
            }
        });

        bttConfirmar.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bttConfirmar.setText("Confirmar Devolução");
        bttConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttConfirmarActionPerformed(evt);
            }
        });

        bttLimpar.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bttLimpar.setText("Limpar");
        bttLimpar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttLimparActionPerformed(evt);
            }
        });

        bttVoltar.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bttVoltar.setText("Voltar");
        bttVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttVoltarActionPerformed(evt);
            }
        });

        jtaResultado.setEditable(false);
        jtaResultado.setColumns(20);
        jtaResultado.setRows(5);
        jtaResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 0, 14))); // NOI18N
        jScrollPane1.setViewportView(jtaResultado);

        jLabel7.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel7.setText("0.00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(252, 252, 252)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbNumOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)))
                        .addGap(0, 32, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bttConfirmar)
                                .addGap(118, 118, 118)
                                .addComponent(bttLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bttVoltar))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbNumOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttConfirmar)
                    .addComponent(bttLimpar)
                    .addComponent(bttVoltar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bttVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttVoltarActionPerformed
        this.setVisible(false);
        Main.janela.remove(this);
        Main.janela.add(new HomeVendedor(this.vendedor));
        Main.janela.setVisible(true);
    }//GEN-LAST:event_bttVoltarActionPerformed

    private void bttLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttLimparActionPerformed
        jcbNumOrdem.setSelectedIndex(0);
        jtaResultado.setText("");
    }//GEN-LAST:event_bttLimparActionPerformed

    private void jcbNumOrdemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbNumOrdemFocusLost
        this.aluguel = dao.buscaAdministrador(Integer.parseInt(jcbNumOrdem.getSelectedItem().toString()));
        jtaResultado.setText("Vendedor: "+this.aluguel.getCodVen()+"\n");
        jtaResultado.setText(jtaResultado.getText()+"Cliente: "+this.aluguel.getCodCli()+"\n");
        jtaResultado.setText(jtaResultado.getText()+"Veiculo: "+this.aluguel.getCodVei()+"\n");
        jtaResultado.setText(jtaResultado.getText()+"Data Devolução: "+dateDev()+"\n");
        this.aluguel.setPreco(calcularPreco(this.aluguel.getDataAlu(), this.aluguel.getPreco()));
        jtaResultado.setText(jtaResultado.getText()+"Preço: "+this.aluguel.getPreco()+"\n");
        this.aluguel.setMulta(calcularPreco(this.aluguel.getDataDev(), this.aluguel.getMulta()));
        if(this.aluguel.getMulta() < 0)
            this.aluguel.setMulta(0);
        jtaResultado.setText(jtaResultado.getText()+"Multa: "+this.aluguel.getMulta()+"\n");
        this.aluguel.setTotal(this.aluguel.getPreco()+this.aluguel.getMulta());
        jtaResultado.setText(jtaResultado.getText()+"Total: "+this.aluguel.getTotal()+"\n");
    }//GEN-LAST:event_jcbNumOrdemFocusLost

    private void bttConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttConfirmarActionPerformed
        dao.atualizaAluguel(this.aluguel);
        DAOreceitasDespesas daor = new DAOreceitasDespesas();
        DAOveiculo daov = new DAOveiculo();
        ReceitaDespesa rec = new ReceitaDespesa();
        rec.setIdFilial(daov.buscaVeiculo(this.aluguel.getCodVei()).getCodFilial());
        rec.setValor(this.aluguel.getTotal());
        rec.setDescricao("Pagamento aluguel - veiculo de codigo " + this.aluguel.getCodVei() + " - cliente "+this.aluguel.getCodCli());
        daor.adicionaReceitasDespesas(rec);
        JOptionPane.showMessageDialog(null, "Devolvido!");
        this.setVisible(false);
        Main.janela.remove(this);
        Main.janela.add(new Devolucao(this.vendedor));
        Main.janela.setVisible(true);
    }//GEN-LAST:event_bttConfirmarActionPerformed

    private void loadAlugueis(){
        List<Aluguel> list = dao.recuperaAlugueisAbertos();
        this.alugueis = new String[list.size()+1];
        int i = 1;
        this.alugueis[0] = "Selecione";
        for(Aluguel alu: list){
            this.alugueis[i] = String.valueOf(alu.getNumOrdem());
            i++;
        }
    }
    
    private float calcularPreco(String dateAlu, float preco){
        Date low = new Date(dateAlu), high = new Date(dateDev());
        int time = dataDiff(low, high);
        return time * preco;
    }
    
    public static int dataDiff(java.util.Date dataLow, java.util.Date dataHigh){
        GregorianCalendar startTime = new GregorianCalendar();
        GregorianCalendar endTime = new GregorianCalendar();
        GregorianCalendar curTime = new GregorianCalendar();
        GregorianCalendar baseTime = new GregorianCalendar();
        startTime.setTime(dataLow);
        endTime.setTime(dataHigh);
        int dif_multiplier = 1;
        // Verifica a ordem de inicio das datas
        if( dataLow.compareTo( dataHigh ) < 0 ){
            baseTime.setTime(dataHigh);
            curTime.setTime(dataLow);
            dif_multiplier = 1;
        }else{
            baseTime.setTime(dataLow);
            curTime.setTime(dataHigh);
            dif_multiplier = -1;
        }
        int result_years = 0;
        int result_months = 0;
        int result_days = 0;
        // Para cada mes e ano, vai de mes em mes pegar o ultimo dia para import acumulando
        // no total de dias. Ja leva em consideracao ano bissesto
        while( curTime.get(GregorianCalendar.YEAR) < baseTime.get(GregorianCalendar.YEAR) ||
               curTime.get(GregorianCalendar.MONTH) < baseTime.get(GregorianCalendar.MONTH)  )
        {
            int max_day = curTime.getActualMaximum( GregorianCalendar.DAY_OF_MONTH );
            result_months += max_day;
            curTime.add(GregorianCalendar.MONTH, 1);
        }
        // Marca que é um saldo negativo ou positivo
        result_months = result_months*dif_multiplier;
        // Retirna a diferenca de dias do total dos meses
        result_days += (endTime.get(GregorianCalendar.DAY_OF_MONTH) - startTime.get(GregorianCalendar.DAY_OF_MONTH));
        return result_years+result_months+result_days;
    }
    
    private String dateDev(){
        String res, format = "yyyy/MM/dd";
        Calendar c = Calendar.getInstance();
        SimpleDateFormat date = new SimpleDateFormat(format);
        res = date.format(c.getTime());
        return res;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttConfirmar;
    private javax.swing.JButton bttLimpar;
    private javax.swing.JButton bttVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbNumOrdem;
    private javax.swing.JTextArea jtaResultado;
    // End of variables declaration//GEN-END:variables
}
